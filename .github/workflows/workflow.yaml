name: build-test
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  style:
    name: code style check
    runs-on: ubuntu-latest
    steps:
      - name: install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.3'

      - name: checkout
        uses: actions/checkout@v2

      - name: run lint
        run: make lint

      - name: run format check
        run: make check

  sdk-tests:
    name: sdk tests
    runs-on: ubuntu-latest
    steps:
      - name: install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.3'

      - name: checkout
        uses: actions/checkout@v2

      - name: run tests
        run: make test

  build-examples:
    name: build examples
    runs-on: ubuntu-latest
    container:
      image: tinygo/tinygo:0.17.0
    steps:
      - name: install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.3'

      - name: checkout
        uses: actions/checkout@v2

      - name: cache built examples
        uses: actions/cache@v2
        id: cache-built-examples
        with:
          path: examples
          key: ${{ hashFiles('examples/**', 'proxywasm/**') }}

      - name: build examples
        if: steps.cache-built-examples.outputs.cache-hit != 'true'
        run: find ./examples -type f -name "main.go" | xargs -Ip tinygo build -o p.wasm -scheduler=none -target=wasi p

  e2e-tests-envoy:
    strategy:
      matrix:
        envoy-tag: [ 1.17.1, 1.18.2 ]
    name: e2e tests on Envoy
    needs: build-examples
    runs-on: ubuntu-latest
    container:
      image: envoyproxy/envoy:v${{ matrix.envoy-tag }}
    steps:
      - name: install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.3'

      - name: checkout
        uses: actions/checkout@v2

      - name: cache built examples
        uses: actions/cache@v2
        with:
          path: examples
          key: ${{ hashFiles('examples/**', 'proxywasm/**') }}

      - name: run e2e test
        run: CGO_ENABLED=0 go test ./e2e/... -v

  e2e-tests-istio:
    strategy:
      matrix:
        istio-version: [ 1.8.5, 1.9.3 ]
    name: e2e tests on Istio
    needs: build-examples
    runs-on: ubuntu-latest
    container:
      image: istio/proxyv2:${{ matrix.istio-version }}
    steps:
      - name: install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.3'

      - name: checkout
        uses: actions/checkout@v2

      - name: fetch built examples
        uses: actions/cache@v2
        with:
          path: examples
          key: ${{ hashFiles('examples/**', 'proxywasm/**') }}

      - name: run e2e test
        run: CGO_ENABLED=0 go test ./e2e/... -v
